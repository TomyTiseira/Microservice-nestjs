
trigger: none
pr:
  branches:
    include:
      - develop

variables:
  DOCKER_BUILDKIT: 1
  NESTJS_VERSION: '14'

stages:
# STAGE 1: LINTING
- stage: Lint
  displayName: 'Lint Microservices'
  jobs:
  - job: Lint_AuthService
    displayName: 'Lint Auth Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
    - script: npm install -g @nestjs/cli
    - checkout: self
    - script: |
        cd auth
        npm ci
        npm run lint
      displayName: 'Run Lint for Auth Service'

  - job: Lint_PaymentService
    displayName: 'Lint Payment Service'
    dependsOn: Lint_AuthService
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
    - script: npm install -g @nestjs/cli
    - checkout: self
    - script: |
        cd payments
        npm ci
        npm run lint
      displayName: 'Run Lint for Payment Service'

  - job: Lint_OrderService
    displayName: 'Lint Order Service'
    dependsOn: Lint_PaymentService
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
    - script: npm install -g @nestjs/cli
    - checkout: self
    - script: |
        cd orders
        npm ci
        npm run lint
      displayName: 'Run Lint for Orders Service'

  - job: Lint_ProductsService
    displayName: 'Lint Product Service'
    dependsOn: Lint_OrderService
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
    - script: npm install -g @nestjs/cli
    - checkout: self
    - script: |
        cd products
        npm ci
        npm run lint
      displayName: 'Run Lint for Product Service'

  - job: Lint_GatewayService
    displayName: 'Lint Gateway Service'
    dependsOn: Lint_ProductsService
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
    - script: npm install -g @nestjs/cli
    - checkout: self
    - script: |
        cd client-gateway
        npm ci
        npm run lint
      displayName: 'Run Lint for Gateway Service'


# STAGE 2: BUILD
- stage: Build
  displayName: 'Build Microservices'
  dependsOn: Lint
  condition: succeeded()
  jobs:
  - job: Build_AuthService
    displayName: 'Build Auth Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        cd auth
        npm run build
      displayName: 'Build Auth Service'

  - job: Build_PaymentService
    displayName: 'Build Payment Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        cd payments
        npm run build
      displayName: 'Build Payment Service'

  - job: Build_OrderService
    displayName: 'Build Order Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        cd orders
        npm run build
      displayName: 'Build Order Service'

# STAGE 3: TEST
- stage: Test
  displayName: 'Test Microservices'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Test_AuthService
    displayName: 'Test Auth Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        cd auth
        npm run test
      displayName: 'Test Auth Service'

  - job: Test_PaymentService
    displayName: 'Test Payment Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        cd payments
        npm run test
      displayName: 'Test Payment Service'

  - job: Test_OrderService
    displayName: 'Test User Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        cd orders
        npm run test
      displayName: 'Test Order Service'
